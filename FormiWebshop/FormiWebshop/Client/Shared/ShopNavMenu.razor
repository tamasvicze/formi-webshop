@inject ICategoryService CategoryService
@inject IStringLocalizer<App> Localizer
@implements IDisposable

<MudGrid Justify="Justify.Center">
    <MudItem xs="10">
        <div class="top-row ps-3 navbar navbar-dark navbar-toggler-wrapper">
            <div class="container-fluid">
                <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </div>

        <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
            <nav class="flex-nav">
                <div class="nav-item px-2">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        @Localizer[nameof(ResourceStrings.Home)]
                    </NavLink>
                </div>
                @foreach (var category in CategoryService.Categories)
                {
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="@category.Url">
                            @category.Name
                        </NavLink>
                    </div>
                }
            </nav>
        </div>
    </MudItem>
</MudGrid>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

}
